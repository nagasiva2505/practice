cd $HOME
git config --global user.email "emailaddress@yahoo.com"
git config --global user.name "username"

curl -u "username:<MYTOKEN>" https://github.com/username/ol3-1.git
git clone --branch=gh-pages https://github.com/username/ol3-1.git gh-pages

cd gh-pages
mkdir buildtest
cd buildtest
touch asdf.asdf

git add -f .
git commit -m "Travis build $TRAVIS_BUILD_NUMBER pushed to gh-pages"
git push -fq origin gh-pages

Dear Shashi,
I hope you are doing well. I am writing to formally request leave for my wedding on the following dates: March 27th, 28th, and April 1st to 11th.
As this is a significant occasion for me and my family, I would truly appreciate your approval for this leave. I will ensure that all my ongoing tasks are completed in advance, and I will coordinate with my team to ensure a smooth workflow during my absence.
Please let me know if you need any further details. Looking forward to your kind approval.
Best regards,
Ozili Prasanth Kumar
9014817467

// Import required Java classes
import java.io.*;

globalMap.put("fileIndex", globalMap.get("fileIndex") == null ? 1 : (Integer) globalMap.get("fileIndex"));
globalMap.put("currentSize", globalMap.get("currentSize") == null ? 0L : (Long) globalMap.get("currentSize"));

// Define constants
final long MAX_FILE_SIZE = 10L * 1024 * 1024 * 1024; // 10GB in bytes

// Get current file index and size from globalMap
int fileIndex = (Integer) globalMap.get("fileIndex");
long currentSize = (Long) globalMap.get("currentSize");

// Define output file path dynamically
String outputPath = "C:/TalendOutput/split_file_" + fileIndex + ".csv";
BufferedWriter writer = (BufferedWriter) globalMap.get("fileWriter_" + fileIndex);

// If writer is null or file exceeds 10GB, create a new file
if (writer == null || currentSize >= MAX_FILE_SIZE) {
    if (writer != null) {
        writer.close(); // Close previous file
    }
    fileIndex++; // Increment file index
    globalMap.put("fileIndex", fileIndex);
    outputPath = "C:/TalendOutput/split_file_" + fileIndex + ".csv";
    writer = new BufferedWriter(new FileWriter(outputPath));
    globalMap.put("fileWriter_" + fileIndex, writer);
    globalMap.put("currentSize", 0L); // Reset size counter
}

// Convert row data to string
String rowData = String.join(",", input_row.column1, input_row.column2, input_row.column3) + "\n";
byte[] rowBytes = rowData.getBytes();
writer.write(rowData);

// Update file size tracker
currentSize += rowBytes.length;
globalMap.put("currentSize", currentSize);

"Thank you for your message. I will be unavailable from 26th March 2025 to 28th March 2025. For any urgent matters, please contact Shasikanth Chamarthy."

Subject: Leave Request for Housewarming Ceremony

Dear [Manager's Name],

I hope you're doing well. I would like to request leave on [insert date] as I’ll be hosting a housewarming ceremony at my new residence.

Kindly grant me leave for the day. I will ensure all work is managed prior to my absence.

Thank you for your support.

Best regards,
[Your Name]





variables:
  # User-defined
  ARTIFACT_NAME: siva_test
  DEPLOY_PATH: /sasdata/gsasuat1/tstsasi/appid9082
  SASPROCESS_PATH: /sasdata/tstsas1/dev/appid9082/siva_test
  DROPBOX_IN_PATH: /sasdata/gsasuati/tstsas1/dropbox/in/siva_test/path
  DROPBOX_OUT_PATH: /sasdata/gsasuat1/tstsas1/dropbox/out/siva_test/path
  EMAIL_TO: tetalinagasiva、tatareddy@truist.com

  # Static
  BASE_VERSION: "1.0"
  ARTIFACT_BASE_URL: "https://artifactory.bbtnet.com/artifactory/SAS-Viya-Grid-local"
  ARTIFACT_NAME_WITH_EXTENSION: "${ARTIFACT_NAME}.zip"
  SERVER_DEPLOY_PATH: "${DEPLOY_PATH}/${ARTIFACT_NAME}"

stages:
  - publish
  - deploy

deploy_app:
  stage: deploy
  image: dex-docker.artifactory.bbtnet.com/manifesto:latest
  tags:
    - new-shared-runner

  variables:
    PROMOTE_TO_ENV: "uat"

  script:
    # Set version and filename
    - ART_VERSION=$(date +%FT%H%M)
    - FILE_NAME="${ARTIFACT_NAME}_${ART_VERSION}.zip"

    # Prepare package folder and collect files
    - mkdir -p package
    - find code/ -name '*.sas' -exec cp {} package/ \;
    - find sas_scripts/ -name '*.sas' -exec cp {} package/ \;
    - cp parms/* package/ 2>/dev/null || true

    # Set SAS_CODE with comma-separated SAS file names
    - export SAS_CODE=$(find package/ -name '*.sas' -exec basename {} \; | paste -sd, -)
    - echo "Detected SAS_CODE: $SAS_CODE"

    # Create zip
    - zip -r "${FILE_NAME}" package/*

    # Upload artifact to Artifactory
    - curl -u "${ARTIFACT_USER}:${ARTIFACT_PASSWORD}" --data-binary @"${FILE_NAME}" -X PUT "${ARTIFACT_BASE_URL}/${ARTIFACT_NAME}/${FILE_NAME}"

    # Run commit script
    - chmod +x commit-files.sh
    - ./commit-files.sh "${ART_VERSION}"

  rules:
    - if: '$CI_COMMIT_REF_NAME == "main"'
